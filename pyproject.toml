[project]
name = "nebari"
dynamic = ["version"]
description = "A Jupyter and Dask-powered open source data science platform."
readme = "README.md"
requires-python = ">=3.8"
license = "BSD-3-Clause"
authors = [
    { name = "Nebari development team", email = "internal-it@quansight.com" },
]
keywords = [
    "aws",
    "gcp",
    "do",
    "azure",
    "nebari",
    "dask",
    "jupyterhub",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "Framework :: Jupyter :: JupyterLab",
]

dependencies = [
    "auth0-python",
    "azure-identity==1.6.1",
    "azure-mgmt-containerservice==16.2.0",
    "bcrypt",
    "boto3",
    "cloudflare",
    "importlib_metadata; python_version<'3.8'",
    "kubernetes",
    "pydantic",
    "pynacl",
    "python-keycloak",
    "questionary",
    "rich",
    "ruamel.yaml",
    "typer",
]

[project.optional-dependencies]
dev = [
    "black==22.3.0",
    "dask-gateway",
    "diagrams",
    "escapism",
    "flake8==3.8.4",
    "importlib-metadata<5.0",
    "jhub-client",
    "paramiko",
    "pre-commit",
    "pytest",
    "pytest-timeout",
]

[project.urls]
Documentation = "https://www.nebari.dev/"
Source = "https://github.com/nebari-dev/nebari"

[project.scripts]
nebari = "nebari.cli.main:app"


### build-system ###
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


### tool.hatch ###
[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "nebari/_version.py"
local_scheme = "node-and-timestamp"

[tool.black]
line-length = 88
target-version = [
    'py38',
    'py39',
    'py310',
    'py311',
]
exclude = "/nebari/template/"


[tool.codespell]
builtin = "rare,clear,informal,names"
skip = "_build,*/build/*,*/node_modules/*,nebari.egg-info,.nox,*.git,*.js,*.json,*.yaml,*.yml"
ignore-words-list = "AKS,aks"
# builtin = [
#     "rare",
#     "clear",
#     "informal",
#     "names",
# ]
# skip = [
#     "_build",
#     "*/build/*",
#     "*/node_modules/*",
#     "nebari.egg-info",
#     ".nox",
#     "*.git",
#     "*.js",
#     "*.json",
#     "*.yaml",
#     "*.yml",
# ]
# ignore-words-list = ["AKS", "aks"]


# [tool.setuptools_scm]
# write_to = "nebari/_version.py"
# local_scheme = "node-and-timestamp"

# [tool.hatch]
# [tools.setuptools_scm.version_scheme]
# calver_by_date = "calver-by-date"

# TODO: set version dynamically
# path = "nebari/_version.py"
# pattern = "__version__ = version = '(?P<version>.*)'"
