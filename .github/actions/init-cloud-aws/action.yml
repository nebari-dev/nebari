name: init-cloud-aws
description: "Initialize Nebari config for cloud deployment"

inputs:
  directory:
    description: "Path to directory to initialize in"
    required: false
    default: './local-deployment'
  aws_region:
    description: "AWS region to use for deployment"
    required: false
    default: 'us-west-2'
  aws_role_to_assume:
    description: "ARN of AWS role to assume for deployment"
    required: true
  cloudflare_token:
    description: "Token for Cloudflare API"
    required: true

outputs:
  directory:
    description: "Path to config directory"
    value: ${{ steps.metadata.outputs.directory }}
  config:
    description: "Path to Nebari config"
    value: ${{ steps.metadata.outputs.config }}
  project:
    description: "Project name"
    value: ${{ steps.metadata.outputs.project }}
  domain:
    description: "Domain name"
    value: ${{ steps.metadata.outputs.domain }}

runs:
  using: composite

  steps:
    - shell: bash
      id: metadata
      run: |
        # Setup metadata
        DIRECTORY=$(realpath '${{ inputs.directory }}')
        mkdir --parents "${DIRECTORY}"
        echo "directory=${DIRECTORY}" | tee --append "${GITHUB_OUTPUT}"

        CONFIG="${DIRECTORY}/nebari-config.yaml"
        echo "config=${CONFIG}" | tee --append "${GITHUB_OUTPUT}"

        PROJECT='github-actions'
        echo "project=${PROJECT}" | tee --append "${GITHUB_OUTPUT}"

        DOMAIN='github-actions-aws.nebari.dev'
        nslookup "${DOMAIN}"
        echo "domain=${DOMAIN}" | tee --append "${GITHUB_OUTPUT}"

    - name: Authenticate to AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.aws_role_to_assume }}
        role-session-name: github-action
        aws-region: ${{ inputs.aws_region }}

    - shell: bash -l {0}
      id: init
      working-directory: ${{ steps.metadata.outputs.directory }}
      run: |
        nebari init aws \
          --project-name '${{ steps.metadata.outputs.project }}' \
          --domain-name '${{ steps.metadata.outputs.domain }}' \
          --auth-provider password \
          --output '${{ steps.metadata.outputs.config }}'
      env:
        CLOUDFLARE_TOKEN: ${{ inputs.cloudflare_token }}

    - shell: bash
      run: |
        # Update nebari config for CI

        # Change default JupyterLab theme
        cat >> '${{ steps.metadata.outputs.config }}' <<- EOM
        jupyterlab:
          default_settings:
            "@jupyterlab/apputils-extension:themes":
              theme: JupyterLab Dark
        EOM

        # Change default value for minio persistence size
        cat >> '${{ steps.metadata.outputs.config }}' <<- EOM
        monitoring:
          enabled: true
          overrides:
            minio:
              persistence:
                size: 1Gi
        EOM

    - shell: bash
      run: |
        # Display Nebari config
        cat '${{ steps.metadata.outputs.config }}'
