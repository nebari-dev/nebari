name: Digital Ocean Deployment

on:
  schedule:
    - cron: "0 0 * * MON"
  workflow_dispatch:
    inputs:
      branch:
        description: "Nebari branch to deploy, test, destroy"
        required: true
        default: develop
        type: string
      image-tag:
        description: "Nebari image tag created by the nebari-docker-images repo"
        required: true
        default: main
        type: string
      tf-log-level:
        description: "Change Terraform log levels"
        required: false
        default: info
        type: choice
        options:
          - info
          - warn
          - debug
          - trace
          - error

env:
  NEBARI_GH_BRANCH: ${{ github.event.inputs.branch || 'main' }}
  NEBARI_IMAGE_TAG: ${{ github.event.inputs.image-tag || 'main' }}
  TF_LOG: ${{ github.event.inputs.tf-log-level || 'info' }}

jobs:
  test-do-integration:
    runs-on: ubuntu-latest
    if: ${{ vars.SKIP_DO_INTEGRATION_TEST != 'true' }}
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.NEBARI_GH_BRANCH }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Nebari
        run: |
          pip install .[dev]
          playwright install

      - name: Authenticate to Digital Ocean
        uses: ./.github/actions/authenticate-provider
        with:
          provider: do
          cloudflare_token: true

      - name: Integration Tests
        run: |
          pytest --version
          pytest tests/tests_integration/ -vvv -s --cloud do
        env:
          NEBARI_SECRET__default_images__jupyterhub: "quay.io/nebari/nebari-jupyterhub:${{ env.NEBARI_IMAGE_TAG }}"
          NEBARI_SECRET__default_images__jupyterlab: "quay.io/nebari/nebari-jupyterlab:${{ env.NEBARI_IMAGE_TAG }}"
          NEBARI_SECRET__default_images__dask_worker: "quay.io/nebari/nebari-dask-worker:${{ env.NEBARI_IMAGE_TAG }}"
