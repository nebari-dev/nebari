name: Test Docker images

on:
  pull_request:
    paths:
      - "Dockerfile.*"

      - "dask-worker/*"
      - "jupyterhub/*"
      - "jupyterlab/*"

      - "scripts/*"

      - ".github/workflows/build-push-docker.yaml"
      - ".github/workflows/test-images.yaml"

env:
  DOCKER_ORG: nebari
  GITHUB_SHA: ${{ github.sha }}
  GPU_BASE_IMAGE: nvidia/cuda:12.8.1-base-ubuntu24.04
  GPU_IMAGE_SUFFIX: gpu
  BASE_IMAGE: ubuntu:24.04

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - jupyterlab
          - jupyterhub
          - dask-worker
        platform:
          - gpu
          - cpu
        exclude:
          # excludes JupyterHub/GPU
          - dockerfile: jupyterhub
            platform: gpu
    steps:
      - name: Checkout Repository üõé
        uses: actions/checkout@v3

      - name: Lint Dockerfiles üîç
        uses: jbergstroem/hadolint-gh-action@v1
        with:
          dockerfile: Dockerfile
          output_format: tty
          error_level: 0

      - name: "Set BASE_IMAGE and Image Suffix üì∑"
        if: ${{ matrix.platform == 'gpu' }}
        run: |
          echo "GPU Platform Matrix"
          echo "BASE_IMAGE=$GPU_BASE_IMAGE" >> $GITHUB_ENV
          echo "IMAGE_SUFFIX=-$GPU_IMAGE_SUFFIX" >> $GITHUB_ENV

      - name: "Set up Docker Buildx üõ†Ô∏è"
        uses: docker/setup-buildx-action@v2

      - name: Build Image üõ†
        uses: docker/build-push-action@v3
        with:
          context: .
          file: "Dockerfile"
          target: ${{ matrix.dockerfile }}
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: BASE_IMAGE=${{ env.BASE_IMAGE }}
          platforms: linux/amd64,linux/arm64
