# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Code Scanning

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '19 23 * * 6'

permissions:
  contents: read

jobs:
  SAST:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Trivy config Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scan-type: ['config', 'fs']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6
        if: matrix.scan-type == 'fs'

      # Trivy does not work on the pyproject.toml file itself, so we need
      # to lock the requirements using uv first.
      - name: Lock requirements
        run: uv pip compile --universal pyproject.toml > requirements.txt
        if: matrix.scan-type == 'fs'

      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: ${{ matrix.scan-type }}
          hide-progress: true
          format: 'sarif'
          output: 'trivy-${{ matrix.scan-type }}.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          limit-severities-for-sarif: true

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-${{ matrix.scan-type }}.sarif'
