name: "Local Integration Tests"

on:
  pull_request:
    paths:
      - ".github/workflows/test_local_integration.yaml"
      - "tests/**"
      - "scripts/**"
      - "src/**"
      - "pyproject.toml"
      - "pytest.ini"
      - ".cirun.yml"
  push:
    branches:
      - main
      - develop
      - release/\d{4}.\d{1,2}.\d{1,2}
    paths:
      - ".github/workflows/test_local_integration.yaml"
      - "tests/**"
      - "scripts/**"
      - "src/**"
      - "pyproject.toml"
      - "pytest.ini"
      - ".cirun.yml"
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: string

jobs:
  test-local-integration:
    runs-on: "cirun-runner--${{ github.run_id }}"
    defaults:
      run:
        shell: bash -l {0}
    concurrency:
      group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    steps:
      - name: 'Checkout Infrastructure'
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v2
        env:
          CONDA: /home/runnerx/miniconda3
        with:
          python-version: 3.8
          miniconda-version: "latest"

      - name: Install Nebari and playwright
        run: |
          pip install .[dev]
          playwright install --with-deps chromium

      - uses: azure/setup-kubectl@v3
        with:
          version: v1.19.16

      - name: Enable docker permissions for user
        run: |
          sudo docker ps
          sudo usermod -aG docker $USER && newgrp docker

          docker info
          docker ps

      - name: Get routing table for docker pods
        run: |
          ip route

      - name: Initialize Nebari Cloud
        run: |
          mkdir -p local-deployment
          cd local-deployment
          nebari init local --project=thisisatest --domain github-actions.nebari.dev --auth-provider=password

          # Need smaller profiles on Local Kind
          sed -i -E 's/(cpu_guarantee):\s+[0-9\.]+/\1: 0.25/g' "nebari-config.yaml"
          sed -i -E 's/(mem_guarantee):\s+[A-Za-z0-9\.]+/\1: 0.25G/g' "nebari-config.yaml"

          cat nebari-config.yaml

      - name: Deploy Nebari
        working-directory: local-deployment
        run: |
          nebari deploy --config nebari-config.yaml --disable-prompt

      - name: Basic kubectl checks after deployment
        if: always()
        run: |
          kubectl get all,cm,secret,ing -A

      - name: Check github-actions.nebari.dev resolves
        run: |
          nslookup github-actions.nebari.dev

      - name: Curl jupyterhub login page
        run: |
          curl -k https://github-actions.nebari.dev/hub/home -i

      ### CYPRESS TESTS
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: npm version
        run: |
          npm --version
      - name: Install Cypress dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

      - name: Get nebari-config.yaml full path
        run: echo "NEBARI_CONFIG_PATH=`realpath ./local-deployment/nebari-config.yaml`" >> "$GITHUB_ENV"

      - name: Create example-user
        working-directory: local-deployment
        run: |
          export CYPRESS_EXAMPLE_USER_NAME=example-user
          export CYPRESS_EXAMPLE_USER_PASSWORD=P@sswo3d

          echo "CYPRESS_EXAMPLE_USER_NAME=${CYPRESS_EXAMPLE_USER_NAME}" >> $GITHUB_ENV
          echo "CYPRESS_EXAMPLE_USER_PASSWORD=${CYPRESS_EXAMPLE_USER_PASSWORD}" >> $GITHUB_ENV

          nebari keycloak adduser --user "${CYPRESS_EXAMPLE_USER_NAME}" "${CYPRESS_EXAMPLE_USER_PASSWORD}" --config "${NEBARI_CONFIG_PATH}"
          nebari keycloak listusers --config "${NEBARI_CONFIG_PATH}"

      - name: Cypress run
        uses: cypress-io/github-action@v4
        env:
          CYPRESS_BASE_URL: https://github-actions.nebari.dev/
        with:
          working-directory: tests/tests_e2e

      - name: Playwright Tests
        env:
          KEYCLOAK_USERNAME: ${{ env.CYPRESS_EXAMPLE_USER_NAME }}
          KEYCLOAK_PASSWORD: ${{ env.CYPRESS_EXAMPLE_USER_PASSWORD }}
          NEBARI_FULL_URL: https://github-actions.nebari.dev/
        working-directory: tests/tests_e2e/playwright
        run: |
          # create environment file
          envsubst < .env.tpl > .env
          # run playwright pytest tests in headed mode with the chromium browser
          xvfb-run pytest --browser chromium

      - name: Save Cypress screenshots and videos
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-cypress
          path: |
            ./tests/tests_e2e/cypress/screenshots/
            ./tests/tests_e2e/cypress/videos/
            ./tests/tests_e2e/playwright/videos/

      - name: Deployment Pytests
        run: |
          export KEYCLOAK_USERNAME=${CYPRESS_EXAMPLE_USER_NAME}
          export KEYCLOAK_PASSWORD=${CYPRESS_EXAMPLE_USER_PASSWORD}
          pytest tests/tests_deployment/ -v -s

      - name: JupyterHub Notebook Tests
        timeout-minutes: 2
        # run jhub-client after pytest since jhubctl can cleanup
        # the running server
        run: |
          sleep 60
          export JUPYTERHUB_USERNAME=${CYPRESS_EXAMPLE_USER_NAME}
          export JUPYTERHUB_PASSWORD=${CYPRESS_EXAMPLE_USER_PASSWORD}
          jhubctl --verbose run --hub=https://github-actions.nebari.dev \
                                --auth-type=keycloak \
                                --validate --no-verify-ssl \
                                --kernel python3 \
                                --stop-server \
                                --notebook tests/tests_deployment/assets/notebook/simple.ipynb \

      ### CLEANUP AFTER TESTS
      - name: Cleanup nebari deployment
        run: |
          cd local-deployment
          nebari destroy --config nebari-config.yaml --disable-prompt
