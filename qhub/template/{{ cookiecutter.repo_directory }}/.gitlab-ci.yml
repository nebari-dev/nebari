render-qhub:
  image: "python:3.9"
  variables:
    COMMIT_MSG: |
      qhub-config.yaml automated commit: {{ '$CI_COMMIT_SHA' }}
{%- if cookiecutter.QHUB_GH_BRANCH != '' %}
    # Preserve dev branch so pip_install_qhub doesn't get overridden on next render
    QHUB_GH_BRANCH: {{ cookiecutter.QHUB_GH_BRANCH }}
{% endif %}
{%- if cookiecutter.ci_cd.before_script is defined %}
  before_script:
{%- for command in cookiecutter.ci_cd.before_script %}
   - {{ command }}{% endfor %}
{%- endif -%}
{%- if cookiecutter.ci_cd.after_script is defined %}
  after_script:
{%- for command in cookiecutter.ci_cd.after_script %}
   - {{ command }}{% endfor %}
{%- endif %}
  script:
    - git checkout "{{ cookiecutter.ci_cd.branch }}"
    - {{ cookiecutter.pip_install_qhub }}
    - qhub deploy --config qhub-config.yaml --disable-prompt --skip-remote-state-provision
    - git config user.email "qhub@quansight.com"
    - git config user.name "gitlab ci"
    - git add .
    - git diff --quiet && git diff --staged --quiet || (git commit -m "${COMMIT_MSG}"; git push origin "{{ cookiecutter.ci_cd.branch }}")
  only:
    refs:
      - "{{ cookiecutter.ci_cd.branch }}"
    changes:
      - "qhub-config.yaml"

build-docker-images:
  services:
    - docker:dind
  image: "docker:19.03.12"
  timeout: 2h
  parallel:
    matrix:
      - DOCKERFILE:
          - jupyterlab
          - jupyterhub
          - dask-worker
          - dask-gateway
  variables:
    IMAGE_TAG: {{ '$CI_COMMIT_SHA' }}
    IMAGE_NAME: {{ cookiecutter.project_name }}-{{ '$DOCKERFILE' }}
  script:
    - docker build -f "image/Dockerfile.{{ '$DOCKERFILE' }}" -t "$IMAGE_NAME:$IMAGE_TAG" image
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "{{ cookiecutter.ci_cd.branch }}"
    changes:
      - "image/**"
